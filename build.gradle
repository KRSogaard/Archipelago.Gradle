buildscript {
    ext {
        springBootVersion = '2.2.1.RELEASE'
    }

    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven {
            name = "Local dynamodb Repo"
            //Local DynamoDB repository
            url "https://s3-us-west-2.amazonaws.com/dynamodb-local/release"
        }
        maven {
            name = "Wewelo Repo"
            url "http://repo.wewelo.com/release"
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    sourceCompatibility = 11
    targetCompatibility = 11

    dependencies {
        // Test framework
        testImplementation group: 'junit', name: 'junit', version: '4.12'
        testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.+'

        implementation 'org.slf4j:slf4j-api:1.7.30'

        // Google Guava
        implementation 'com.google.guava:guava:28.0-jre'
        implementation 'org.apache.commons:commons-lang3:3.0'

        testImplementation 'commons-io:commons-io:2.6'

        // Lombok
        implementation 'org.projectlombok:lombok:1.18.12'  // utilities for POJOs
        annotationProcessor 'org.projectlombok:lombok:1.18.12'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    }

    sourceSets {
        main.java.srcDirs = ['src']
        main.resources.srcDirs = ['resources']
        test.java.srcDirs = ['tst']
        test.resources.srcDirs = ['tst/resources']
    }
}

project(':Archipelago.Common') {
}
project(':Archipelago.Common.Concurrent') {
}

project(':Archipelago.Common.DynamoDB') {
    apply plugin: 'maven-publish'

    dependencies {
        implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.11.880'
    }
}

project(':Maui') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'application'

    mainClassName = 'build.archipelago.maui.Application'

    dependencies {
        implementation project(':Maui.Core')
        implementation project(':VersionSetService.Client')
        implementation project(':PackageService.Client')
        implementation project(':Archipelago.Common')
        implementation project(':Archipelago.Common.Concurrent')

        implementation 'org.apache.logging.log4j:log4j-core:2.13.3'
        implementation 'org.apache.logging.log4j:log4j-api:2.13.3'
        implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'

        implementation 'com.google.inject:guice:4.2.3'
        implementation 'info.picocli:picocli:4.1.4'
        annotationProcessor 'info.picocli:picocli-codegen:4.1.4'
        implementation 'org.jgrapht:jgrapht-core:1.5.0'
    }

    compileJava {
        options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
    }

    task fatJar(type: Jar) {
        manifest {
            attributes 'Main-Class': 'build.archipelago.maui.Application'
        }
        baseName = 'Maui-cli'
        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
        with jar
    }
}

project(':Maui.Core') {
    dependencies {
        implementation project(':Archipelago.Common')
        implementation project(':Archipelago.Common.Concurrent')
        implementation project(':VersionSetService.Client')
        implementation project(':PackageService.Client')

        implementation 'org.slf4j:slf4j-api:1.7.30'
        implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.3.0'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.2.3'
        implementation 'net.lingala.zip4j:zip4j:2.6.2'
        implementation 'org.jgrapht:jgrapht-core:1.5.0'
    }
}

project(':PackageService') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'application'

    mainClassName = 'build.archipelago.packageservice.Application'

    configurations {
        all {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
    }

    dependencies {
        implementation project(':Archipelago.Common')
        implementation project(':Archipelago.Common')
        implementation project(':PackageService.Core')

        implementation 'org.springframework.boot:spring-boot-starter-jersey'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-log4j2'
        implementation 'io.springfox:springfox-swagger2:2.9.2'
        implementation 'io.springfox:springfox-swagger-ui:2.9.2'

        implementation 'com.amazonaws:aws-java-sdk-s3:1.11.880'
        implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.11.880'

        testImplementation 'com.google.code.gson:gson:2.8.6'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    task runlocal {
        run.configure {
            project.logger.lifecycle("======================================")
            project.logger.lifecycle("= Running application in alpha stage =")
            project.logger.lifecycle("======================================")
            systemProperty "spring.profiles.active", 'alpha'
        }
    }
    runlocal.finalizedBy run
}

project(':PackageService.Core') {
    dependencies {
        implementation project(':Archipelago.Common')
        implementation project(':Archipelago.Common.DynamoDB')

        implementation 'com.amazonaws:aws-java-sdk-s3:1.11.880'
        implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.11.880'

        // Needed for DynamoDBLocal
        testImplementation 'com.amazonaws:DynamoDBLocal:1.12.0'
        testImplementation 'com.almworks.sqlite4java:sqlite4java:1.0.392'
    }
}

project(':PackageService.Client') {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'maven-publish'

    dependencies {
        implementation project(':Archipelago.Common')

        implementation 'org.springframework:spring-web:5.2.9.RELEASE'
    }
}

project(':VersionSetService') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'application'

    mainClassName = 'build.archipelago.versionsetservice.Application'

    configurations {
        all {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
    }

    dependencies {
        implementation project(':Archipelago.Common')
        implementation project(':VersionSetService.Client')
        implementation project(':VersionSetService.Core')
        implementation project(':PackageService.Client')
        implementation project(':PackageService.Core')

        implementation 'org.springframework.boot:spring-boot-starter-jersey'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-log4j2'
        implementation 'io.springfox:springfox-swagger2:2.9.2'
        implementation 'io.springfox:springfox-swagger-ui:2.9.2'
        implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.11.880'

        testImplementation 'com.google.code.gson:gson:2.8.6'
        testImplementation 'net.dongliu:gson-java8-datatype:1.1.0'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        // Needed for DynamoDBLocal
        testImplementation 'com.amazonaws:DynamoDBLocal:1.12.0'
        testImplementation 'com.almworks.sqlite4java:sqlite4java:1.0.392'
    }

    task runlocal {
        run.configure {
            project.logger.lifecycle("======================================")
            project.logger.lifecycle("= Running application in alpha stage =")
            project.logger.lifecycle("======================================")
            systemProperty "spring.profiles.active", 'alpha'
        }
    }
    runlocal.finalizedBy run
}

project(':VersionSetService.Core') {
    dependencies {
        implementation project(':Archipelago.Common')
        implementation project(':Archipelago.Common.DynamoDB')
        implementation project(':VersionSetService.Client')
        implementation project(':PackageService.Client')

        implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.11.880'

        // Needed for DynamoDBLocal
        testImplementation 'com.amazonaws:DynamoDBLocal:1.12.0'
        testImplementation 'com.almworks.sqlite4java:sqlite4java:1.0.392'
    }
    
}

project(':VersionSetService.Client') {
    dependencies {
        implementation project(':Archipelago.Common')

        implementation 'org.springframework:spring-web:5.2.9.RELEASE'
    }
}

project(':BuildServer.API') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'application'

    mainClassName = 'build.archipelago.buildserver.Application'

    configurations {
        all {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
    }

    dependencies {
        implementation project(':Archipelago.Common')
        implementation project(':Archipelago.Common.DynamoDB')
        implementation project(':VersionSetService.Client')
        implementation project(':PackageService.Client')
        implementation project(':Maui.Core')
        implementation project(':BuildServer.Common')

        implementation 'org.springframework.boot:spring-boot-starter-jersey'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-log4j2'
        implementation 'io.springfox:springfox-swagger2:2.9.2'
        implementation 'io.springfox:springfox-swagger-ui:2.9.2'
        implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.11.880'
        implementation 'com.amazonaws:aws-java-sdk-sqs:1.11.880'

        testImplementation 'com.google.code.gson:gson:2.8.6'
        testImplementation 'net.dongliu:gson-java8-datatype:1.1.0'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    task runlocal {
        run.configure {
            project.logger.lifecycle("======================================")
            project.logger.lifecycle("= Running application in alpha stage =")
            project.logger.lifecycle("======================================")
            systemProperty "spring.profiles.active", 'alpha'
        }
    }
    runlocal.finalizedBy run
}

project(':BuildServer.Builder') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'application'

    mainClassName = 'build.archipelago.buildserver.builder.Application'

    dependencies {
        implementation project(":Maui")
        implementation project(":Maui.Core")
        implementation project(':VersionSetService.Client')
        implementation project(':PackageService.Client')
        implementation project(':Archipelago.Common')
        implementation project(':Archipelago.Common.Concurrent')
        implementation project(':BuildServer.Common')

        implementation 'com.wewelo:SQSConsumer:1.1'
        implementation 'org.springframework.boot:spring-boot-starter'

        implementation 'org.apache.logging.log4j:log4j-core:2.13.3'
        implementation 'org.apache.logging.log4j:log4j-api:2.13.3'
        implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'
        implementation 'org.jgrapht:jgrapht-core:1.5.0'
        implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.11.880'
        implementation 'com.amazonaws:aws-java-sdk-sqs:1.11.880'
    }
    configurations {
        all {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
    }
}

project(':BuildServer.Common') {

    dependencies {
        implementation project(':Archipelago.Common')
        implementation project(':Archipelago.Common.DynamoDB')
        implementation project(':VersionSetService.Client')
        implementation project(':PackageService.Client')
        implementation project(':Maui.Core')

        implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.11.880'
        implementation 'com.amazonaws:aws-java-sdk-sqs:1.11.880'
    }
}
