buildscript {
    ext {
        springBootVersion = '2.2.6.RELEASE'
    }

    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    jcenter()
    maven { url 'https://plugins.gradle.org/m2/' }
    maven {
        name = "Local dynamodb Repo"
        //Local DynamoDB repository
        url "https://s3-us-west-2.amazonaws.com/dynamodb-local/release"
    }
    maven {
        name = "Wewelo Repo"
        url "http://repo.wewelo.com/release"
    }
}

apply plugin: 'maven'
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

group "build.archipelago"
version "1.0"
sourceCompatibility = 11
targetCompatibility = 11
mainClassName = 'build.archipelago.maui.Application'

sourceSets {
    main.java.srcDirs = ['src']
    main.resources.srcDirs = ['resources']
    test.java.srcDirs = ['tst']
    test.resources.srcDirs = ['tst/resources']
}

dependencies {
    api "build.archipelago:common:1.0"
    api "build.archipelago:common-concurrent:1.0"
    api "build.archipelago:maui-core:1.0"
    api "build.archipelago:harbor-client:1.0"
    api "build.archipelago:package-service-models:1.0"
    api "build.archipelago:version-set-service-models:1.0"

    implementation 'org.apache.logging.log4j:log4j-core:2.13.3'
    implementation 'org.apache.logging.log4j:log4j-api:2.13.3'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'

    implementation 'com.google.inject:guice:4.2.3'
    implementation 'info.picocli:picocli:4.1.4'
    annotationProcessor 'info.picocli:picocli-codegen:4.1.4'
    implementation 'org.jgrapht:jgrapht-core:1.5.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.2.3'

    // Needed for DynamoDBLocal
    testImplementation 'com.amazonaws:DynamoDBLocal:1.12.0'
    testImplementation 'com.almworks.sqlite4java:sqlite4java:1.0.392'

    // Needed for DynamoDBLocal
    testImplementation 'com.amazonaws:DynamoDBLocal:1.12.0'
    testImplementation 'com.almworks.sqlite4java:sqlite4java:1.0.392'

    // Test framework
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.+'

    implementation 'org.slf4j:slf4j-api:1.7.30'

    // Google Guava
    implementation 'com.google.guava:guava:28.0-jre'
    implementation 'org.apache.commons:commons-lang3:3.0'

    testImplementation 'commons-io:commons-io:2.6'
    testImplementation "org.assertj:assertj-core:3.18.1"

    // Lombok
    compile 'org.projectlombok:lombok:1.18.12'  // utilities for POJOs
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}


compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'build.archipelago.maui.Application'
    }
    baseName = 'Maui-cli'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}
